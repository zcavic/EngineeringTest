version: '3'

services:
  webapi:
    build:
      context: ./webapi
      dockerfile: Dockerfile
    working_dir: /usr/src/app
    volumes:
      - ./webapi:/usr/src/app
    ports:
      - '5000:5000'
    networks:
      - app-network
    environment:
      - MESSAGE_QUEUE=amqp://rabbitmq
      - DB_NAME=fileDB
      - DB_CONN_STRING=mongodb://mongo:27017
      - FILE_DATA_COLLECTION_NAME=video
    links:
      - rabbitmq
      - mongo
    command: bash -c "npm i && npm run dev"

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    working_dir: /usr/src/app
    volumes:
      - ./client:/usr/src/app
    ports:
      - '3000:3000'
    networks:
      - app-network
    environment:
      - WEB_API=http://webapi:5000
    links:
      - webapi
    command: bash -c "npm i && npm run start"

  worker:
    build:
      context: ./worker
      dockerfile: Dockerfile
    working_dir: /usr/src/app
    volumes:
      - ./worker:/usr/src/app
    ports:
      - '4000:4000'
    networks:
      - app-network
    environment:
      - MESSAGE_QUEUE=amqp://rabbitmq
    links:
      - rabbitmq
      - mongo
    command: bash -c "npm i && npm run dev"

  mongo:
    container_name: mongo
    image: mongo
    ports:
      - '27017:27017'
    networks:
      - app-network

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq
    ports:
      - '5672:5672'
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
